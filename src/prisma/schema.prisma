// This is your Prisma schema file,
// learn more about it in the docs: https://pris.ly/d/prisma-schema

// Looking for ways to speed up your queries, or scale easily with your serverless or edge functions?
// Try Prisma Accelerate: https://pris.ly/cli/accelerate-init

generator client {
  provider = "prisma-client-js"
}

datasource db {
  provider = "postgresql"
  url      = env("DATABASE_URL")
}

model User {
  id           Int      @id @default(autoincrement())
  email        String   @unique
  profileSrc  String?
  handleName  String?
  provider     String?
  createdAt   DateTime @default(now())
  kits         Kit[]
  rallies      Rally[]
}

model Kit {
  id          Int      @id @default(autoincrement())
  title       String
  uploaderId Int?
  board       Int
  tag         String?
  description String?
  createdAt  DateTime @default(now())
  deletedAt  DateTime?

  uploaderData   User?    @relation(fields: [uploaderId], references: [id])
  boardData   StampBoard @relation(fields: [board], references: [id])
  stamps      Stamp[]
  rallies     Rally[]
}

model Stamp {
  id      Int @id  @default(autoincrement())
  kit_id  Int
  img_src String

  kit     Kit @relation(fields: [kit_id], references: [id])
}

model StampBoard {
  id      Int      @id @default(autoincrement())
  imgSrc String
  blank   Int
  kits    Kit[]
}

model Rally {
  id               Int      @id @default(autoincrement())
  title       String
  description String?
  status           RallyStatus
  stampBoard      Int
  starterId       Int
  stamped          Int      @default(0)
  createdAt       DateTime @default(now())
  updatedAt       DateTime?
  deletedAt       DateTime?
  starterData          User       @relation(fields: [starterId], references: [id])
  stampBoardData       Kit        @relation(fields: [stampBoard], references: [id])
}

enum RallyStatus {
  active
  inactive
}
